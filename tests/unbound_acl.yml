---

- name: Testing Unbound ACLs
  hosts: localhost
  gather_facts: no
  module_defaults:
    group/ansibleguy.opnsense.all:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.list:
      target: 'unbound_acl'

  tasks:
    - name: Listing
      ansibleguy.opnsense.list:
      register: opn_pre1
      failed_when: >
        opn_pre1.failed or
        'data' not in opn_pre1 or
        opn_pre1.data | length > 0

    - name: Adding - failing because an invalid action was provided
      ansibleguy.opnsense.unbound_acl:
        name: 'ANSIBLE_TEST_1_1'
        action: 'INVALID_ACTION'
        networks: ['192.168.0.0/24']
      register: opn_fail2
      failed_when: not opn_fail2.failed

    - name: Adding - failing because no network was provided
      ansibleguy.opnsense.unbound_acl:
        name: 'ANSIBLE_TEST_1_1'
      register: opn_fail3
      failed_when: not opn_fail3.failed

    - name: Adding - failing because an invalid network was provided
      ansibleguy.opnsense.unbound_acl:
        name: 'ANSIBLE_TEST_1_1'
        networks: ['192.168.0.0/258']
      register: opn_fail4
      failed_when: not opn_fail4.failed

    - name: Adding - failing because of an invalid description was provided
      ansibleguy.opnsense.unbound_acl:
        name: 'ANSIBLE_TEST_1_1'
        networks: ['192.168.0.0/24']
        description: >-
          123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
          123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
          12345678901234567890123456789012345678901234567890123456
      register: opn_fail1
      failed_when: not opn_fail1.failed

    - name: Adding 1
      ansibleguy.opnsense.unbound_acl:
        name: 'ANSIBLE_TEST_1_1'
        action: 'deny'
        networks: ['192.168.0.0/24']
        description: 'Deny access'
      register: opn1
      failed_when: >
        opn1.failed or
        not opn1.changed

    - name: Changing 1
      ansibleguy.opnsense.unbound_acl:
        name: 'ANSIBLE_TEST_1_1'
        action: 'deny'
        networks: ['192.168.0.0/25']
        description: 'Deny access'
      register: opn2
      failed_when: >
        opn2.failed or
        not opn2.changed

    - name: Disabling 1
      ansibleguy.opnsense.unbound_acl:
        name: 'ANSIBLE_TEST_1_1'
        action: 'deny'
        networks: ['192.168.0.0/25']
        description: 'Deny access'
        enabled: false
      register: opn3
      failed_when: >
        opn3.failed or
        not opn3.changed
      when: not ansible_check_mode

    - name: Disabling 1 - nothing changed
      ansibleguy.opnsense.unbound_acl:
        name: 'ANSIBLE_TEST_1_1'
        action: 'deny'
        networks: ['192.168.0.0/25']
        description: 'Deny access'
        enabled: false
      register: opn4
      failed_when: >
        opn4.failed or
        opn4.changed
      when: not ansible_check_mode

    - name: Enabling 1
      ansibleguy.opnsense.unbound_acl:
        name: 'ANSIBLE_TEST_1_1'
        action: 'deny'
        networks: ['192.168.0.0/25']
        description: 'Deny access'
      register: opn5
      failed_when: >
        opn5.failed or
        not opn5.changed
      when: not ansible_check_mode

    - name: Adding 2
      ansibleguy.opnsense.unbound_acl:
        name: 'ANSIBLE_TEST_1_2'
        action: 'allow_snoop'
        networks: ['192.168.0.128/29', '192.168.0.192/29']
        description: 'Allow snoop'
      register: opn6
      failed_when: >
        opn6.failed or
        not opn6.changed
      when: not ansible_check_mode

    - name: Adding 2 - Nothing changed
      ansibleguy.opnsense.unbound_acl:
        name: 'ANSIBLE_TEST_1_2'
        action: 'allow_snoop'
        networks: ['192.168.0.128/29', '192.168.0.192/29']
        description: 'Allow snoop'
      register: opn7
      failed_when: >
        opn7.failed or
        opn7.changed
      when: not ansible_check_mode

    - name: Removing 2
      ansibleguy.opnsense.unbound_acl:
        name: 'ANSIBLE_TEST_1_2'
        state: 'absent'
      register: opn8
      failed_when: >
        opn8.failed or
        not opn8.changed
      when: not ansible_check_mode

    - name: Listing
      ansibleguy.opnsense.list:
      register: opn9
      failed_when: >
        'data' not in opn9 or
        opn9.data | length != 1
      when: not ansible_check_mode

    - name: Cleanup
      ansibleguy.opnsense.unbound_acl:
        name: "{{ item }}"
        state: 'absent'
      loop:
        - 'ANSIBLE_TEST_1_1'
        - 'ANSIBLE_TEST_1_2'
      when: not ansible_check_mode

    - name: Listing
      ansibleguy.opnsense.list:
      register: opn_clean1
      failed_when: >
        'data' not in opn_clean1 or
        opn_clean1.data | length != 0
      when: not ansible_check_mode

---

# todo: test default matching

- name: Testing Unbound Domain overrides
  hosts: localhost
  gather_facts: no
  module_defaults:
    group/ansibleguy.opnsense.all:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.unbound_domain:
      match_fields: ['description']
      timeout: 60

    ansibleguy.opnsense.list:
      target: 'unbound_domain'

  tasks:
    - name: Listing
      ansibleguy.opnsense.list:
      register: opn10
      failed_when: >
        'data' not in opn10 or
        opn10.data | length != 0

    - name: Removing - does not exist
      ansibleguy.opnsense.unbound_domain:
        domain: 'opnsense.test.ansibleguy.net'
        server: '192.168.0.1'
        state: 'absent'
        description: 'ANSIBLE_TEST_1_1'
      register: opn1
      failed_when: >
        opn1.failed or
        opn1.changed

    - name: Adding 1 - failing because of invalid value
      ansibleguy.opnsense.unbound_domain:
        domain: 'opnsense.test.ansibleguy.net'
        server: 'INVALID-IP'
        description: 'ANSIBLE_TEST_1_1'
      register: opn11
      failed_when: not opn11.failed

    - name: Adding 1 - failing because of invalid domain
      ansibleguy.opnsense.unbound_domain:
        domain: '!INVALID-DOMAIN!'
        server: 'INVALID-IP'
        description: 'ANSIBLE_TEST_1_1'
      register: opn12
      failed_when: not opn12.failed

    - name: Adding 1 - failing because of invalid ip-port combinations
      ansibleguy.opnsense.unbound_domain:
        domain: 'opnsense.test.ansibleguy.net'
        server: "{{ item }}"
        description: 'ANSIBLE_TEST_1_1'
      register: opn14
      failed_when: not opn14.failed
      loop:
        - 'INVALID-IP@INVALID-PORT'
        - '192.168.0.1@INVALID-PORT'
        - '192.168.0.1@53530@'
        - '192.168.X.1@53530'
        - '192.168.0.1@535300'

    - name: Adding 1
      ansibleguy.opnsense.unbound_domain:
        domain: 'opnsense.test.ansibleguy.net'
        server: '192.168.0.1'
        description: 'ANSIBLE_TEST_1_1'
        reload: false  # speed
      register: opn4
      failed_when: >
        opn4.failed or
        not opn4.changed

    - name: Disabling 1
      ansibleguy.opnsense.unbound_domain:
        domain: 'opnsense.test.ansibleguy.net'
        server: '192.168.0.1'
        description: 'ANSIBLE_TEST_1_1'
        enabled: false
        reload: false  # speed
      register: opn6
      failed_when: >
        opn6.failed or
        not opn6.changed
      when: not ansible_check_mode

    - name: Disabling 1 - nothing changed
      ansibleguy.opnsense.unbound_domain:
        domain: 'opnsense.test.ansibleguy.net'
        server: '192.168.0.1'
        description: 'ANSIBLE_TEST_1_1'
        enabled: false
        reload: false  # speed
      register: opn9
      failed_when: >
        opn9.failed or
        opn9.changed
      when: not ansible_check_mode

    - name: Enabling 1
      ansibleguy.opnsense.unbound_domain:
        domain: 'opnsense.test.ansibleguy.net'
        server: '192.168.0.1'
        description: 'ANSIBLE_TEST_1_1'
        reload: false  # speed
      register: opn7
      failed_when: >
        opn7.failed or
        not opn7.changed
      when: not ansible_check_mode

    - name: Adding 2
      ansibleguy.opnsense.unbound_domain:
        domain: 'opnsense.test.ansibleguy.net'
        server: '192.168.1.1'
        description: 'ANSIBLE_TEST_1_2'
        reload: false  # speed
      register: opn5
      failed_when: >
        opn5.failed or
        not opn5.changed

    - name: Adding 2 - nothing changed
      ansibleguy.opnsense.unbound_domain:
        domain: 'opnsense.test.ansibleguy.net'
        server: '192.168.1.1'
        description: 'ANSIBLE_TEST_1_2'
        reload: false  # speed
      register: opn13
      failed_when: >
        opn13.failed or
        opn13.changed
      when: not ansible_check_mode

    - name: Changing 2 - server with port
      ansibleguy.opnsense.unbound_domain:
        domain: 'opnsense.test.ansibleguy.net'
        server: '192.168.1.1@1053'
        description: 'ANSIBLE_TEST_1_2'
        reload: false  # speed
      register: opn15
      failed_when: >
        opn15.failed or
        not opn15.changed
      when: not ansible_check_mode

    - name: Adding 2 - nothing changed
      ansibleguy.opnsense.unbound_domain:
        domain: 'opnsense.test.ansibleguy.net'
        server: '192.168.1.1@1053'
        description: 'ANSIBLE_TEST_1_2'
        reload: false  # speed
      register: opn16
      failed_when: >
        opn16.failed or
        opn16.changed
      when: not ansible_check_mode

    - name: Removing 2
      ansibleguy.opnsense.unbound_domain:
        description: 'ANSIBLE_TEST_1_2'
        domain: 'dummy.local'
        server: '192.168.1.1'
        state: 'absent'
        reload: false  # speed
      register: opn8
      failed_when: >
        opn8.failed or
        not opn8.changed
      when: not ansible_check_mode

    - name: Listing
      ansibleguy.opnsense.list:
      register: opn3
      failed_when: >
        'data' not in opn3 or
        opn3.data | length != 1
      when: not ansible_check_mode

    - name: Cleanup
      ansibleguy.opnsense.unbound_domain:
        description: "{{ item }}"
        domain: 'dummy.local'
        server: '192.168.0.1'
        state: 'absent'
      loop:
        - 'ANSIBLE_TEST_1_1'
        - 'ANSIBLE_TEST_1_2'
      when: not ansible_check_mode

    - name: Listing
      ansibleguy.opnsense.list:
      register: opn2
      failed_when: >
        'data' not in opn2 or
        opn2.data | length != 0
      when: not ansible_check_mode
